// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Order_In_Stores.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Order_In_Stores.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Warszawa",
                            PostalCode = "00-001",
                            Street = "Ulica Kwiatowa 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "Kraków",
                            PostalCode = "30-001",
                            Street = "Ulica Wiosenna 5"
                        },
                        new
                        {
                            Id = 3,
                            City = "Gdańsk",
                            PostalCode = "80-001",
                            Street = "Ulica Zimowa 3"
                        },
                        new
                        {
                            Id = 4,
                            City = "Wrocław",
                            PostalCode = "50-001",
                            Street = "Ulica Letnia 8"
                        },
                        new
                        {
                            Id = 5,
                            City = "Poznań",
                            PostalCode = "60-001",
                            Street = "Ulica Jesienna 12"
                        });
                });

            modelBuilder.Entity("Order_In_Stores.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerAddressId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAddressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerAddressId = 1,
                            PaymentType = 1,
                            StoreName = "Sklep 2",
                            StoreNumber = 2
                        },
                        new
                        {
                            Id = 2,
                            CustomerAddressId = 2,
                            PaymentType = 0,
                            StoreName = "Sklep 4",
                            StoreNumber = 4
                        },
                        new
                        {
                            Id = 3,
                            CustomerAddressId = 3,
                            PaymentType = 2,
                            StoreName = "Sklep 6",
                            StoreNumber = 6
                        },
                        new
                        {
                            Id = 4,
                            CustomerAddressId = 4,
                            PaymentType = 1,
                            StoreName = "Sklep 8",
                            StoreNumber = 8
                        },
                        new
                        {
                            Id = 5,
                            CustomerAddressId = 5,
                            PaymentType = 0,
                            StoreName = "Sklep 10",
                            StoreNumber = 10
                        });
                });

            modelBuilder.Entity("Order_In_Stores.Models.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("GrossPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrossPrice = 123m,
                            NetPrice = 100m,
                            OrderId = 1,
                            ProductCode = "P001",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            GrossPrice = 61.5m,
                            NetPrice = 50m,
                            OrderId = 1,
                            ProductCode = "P002",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            GrossPrice = 246m,
                            NetPrice = 200m,
                            OrderId = 2,
                            ProductCode = "P003",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            GrossPrice = 98.4m,
                            NetPrice = 80m,
                            OrderId = 2,
                            ProductCode = "P004",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            GrossPrice = 369m,
                            NetPrice = 300m,
                            OrderId = 3,
                            ProductCode = "P005",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            GrossPrice = 73.8m,
                            NetPrice = 60m,
                            OrderId = 3,
                            ProductCode = "P006",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 7,
                            GrossPrice = 184.5m,
                            NetPrice = 150m,
                            OrderId = 4,
                            ProductCode = "P007",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            GrossPrice = 110.7m,
                            NetPrice = 90m,
                            OrderId = 4,
                            ProductCode = "P008",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            GrossPrice = 147.6m,
                            NetPrice = 120m,
                            OrderId = 5,
                            ProductCode = "P009",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            GrossPrice = 49.2m,
                            NetPrice = 40m,
                            OrderId = 5,
                            ProductCode = "P010",
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("Order_In_Stores.Models.Order", b =>
                {
                    b.HasOne("Order_In_Stores.Models.Address", "CustomerAddress")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerAddress");
                });

            modelBuilder.Entity("Order_In_Stores.Models.OrderLine", b =>
                {
                    b.HasOne("Order_In_Stores.Models.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Order_In_Stores.Models.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Order_In_Stores.Models.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
